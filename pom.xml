<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.pcu-consortium.pcu</groupId>
    <artifactId>pcu-parent</artifactId><!-- or pcu (better project name than pcu-parent) ? -->
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>PCU Parent POM</name>
    <description>PCU Parent POM</description>
    

    <!-- =================== -->
    <!-- Project information -->
    <!-- =================== -->
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <organization>
        <name>PCU Consortium</name>
        <url>http://pcu-consortium.github.io</url>
    </organization>

    <url>https://github.com/pcu-consortium/pcu</url>
    <mailingLists>
        <!-- mailingList>
            <name>PCU Developers mailing list</name>
            <archive>https://groups.google.com/forum/?fromgroups#!forum/pcu-dev</archive>
            <post>pcu-dev@googlegroups.com</post>
        </mailingList -->
        <!-- LATER : also users... -->
    </mailingLists>
    <scm>
        <connection>scm:git:git://github.com/pcu-consortium/pcu.git</connection>
        <developerConnection>scm:git:git@github.com:pcu-consortium/pcu.git</developerConnection>
        <url>https://github.com/pcu-consortium/pcu</url>
    </scm>
    <ciManagement>
        <system>travis (jenkins ??)</system>
        <url>TODO</url>
        <!-- notifiers></notifiers -->
    </ciManagement>
    <issueManagement>
        <url>https://github.com/pcu-consortium/pcu/issues</url>
        <system>Github Issues</system>
    </issueManagement>
    <!-- distributionManagement>
        <repository>
            <id>MyNexus</id>
            <name>MyNexus</name>
            <url>https://mynexus</url>
        </repository>
        <site>
            <id>local-site</id>
            <url>file:target/site/</url>
        </site>
    </distributionManagement -->

    <developers>
        <developer>
            <id>mdutoo</id>
            <name>Marc Dutoo</name>
            <email>marc.dutoo@smile.fr</email>
            <organization>Smile</organization>
            <organizationUrl>http://www.smile.fr</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <modules>
        <module>providers</module>
        <module>platform</module>
        <module>features</module>
        <module>applications</module>
    </modules>
    
    <properties>
        <!-- spring boot : -->
        <spring-boot.version>2.0.2.RELEASE</spring-boot.version>
        <spring.version>5.0.7.RELEASE</spring.version>
        <!-- is thymeleaf still used ???? -->
        <thymeleaf.version>3.0.9.RELEASE</thymeleaf.version><!-- newest though depends on 4.1.0 but supports 4.x -->
        
        <!-- REST : -->
        <cxf.version>3.2.4</cxf.version><!-- 3.2.4 -->
        <jaxrs.version>2.1</jaxrs.version><!-- cxf's -->
        <jackson.version>2.9.5</jackson.version><!-- spring-boot's ; 2.9.4 -->
        <swagger.version>1.5.17</swagger.version><!-- cxf's ; 1.5.17, OpenAPI Spec compatibility 2.0 -->
        <swagger-ui.version>3.17.0</swagger-ui.version><!-- 3.17.0, OpenAPI Spec compatibility 2.0 -->
        <!-- spring.cloud.eureka.version>1.1.3.RELEASE</spring.cloud.eureka.version -->
        
        <!-- logging : -->
        <slf4j.version>1.7.25</slf4j.version><!-- spring-boot & logback's ; 1.7.25 -->
        <logback.version>1.2.3</logback.version><!-- spring-boot's ; 1.2.3 -->
        <groovy.version>2.4.9</groovy.version><!-- spring-boot's (2.4.9 : logback's is ?) -->
        
        <!-- build : -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding><!-- else [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent -->
        <org.jacoco.version>0.7.7.201606060606</org.jacoco.version>
        <cobertura-plugin.version>2.7</cobertura-plugin.version>
        <coveralls-plugin.version>4.0.0</coveralls-plugin.version>
    </properties>
    
    <dependencies>
    
        <!-- TODO mutualize & import base poms : for JAXRS+Jackson REST API, CXF+spring REST stack, spring test ? -->

        <!-- loggging : SLF4J & test-only logback backend -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId><!-- also brought back by logback-classic, spring-boot-starter-logging -->
            <!-- scope>test</scope -->
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <!-- scope>test</scope -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId><!-- ?? -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId><!-- ? for conf ? -->
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId><!-- for tests -->
            <!-- scope>test</scope --><!-- NO because also compile scope, in explicit dependencies of each module ex. pcu-platform-rest-server for swagger2
            and what’s defined in the parent POM seems to take the precedence over transitive dependencies defined in the module’s POM
            see https://blog.pragmasphere.com/2014/06/05/maven-and-test-dependencies/ -->
        </dependency>
       
        <!-- TODO not global ?  -->     
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
    </dependencies>

    <dependencyManagement>
    <dependencies>
        <!-- PCU -->
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-platform-rest-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-platform-rest-server</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-search-spi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-search-spi-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-search-elasticsearch-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-search-elasticsearch-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-search-elasticsearch-spi-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-search-elasticsearch-spi-impl</artifactId>
            <type>test-jar</type>
            <!-- scope>test</scope -->
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-file-spi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-file-spi-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-file-local-spi-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-providers-metadata-extractor-spi-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-connector</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-client</artifactId>
            <version>${project.version}</version>
        </dependency><!-- TODO rm -->
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-simple</artifactId><!-- TODO rm -->
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-pipeline</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-engine</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-server</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-server</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <!-- scope>test</scope -->
        </dependency>
        <dependency>
            <groupId>org.pcu-consortium.pcu</groupId>
            <artifactId>pcu-features-search-web</artifactId><!-- TODO rm -->
            <version>${project.version}</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <!-- Import dependency management from Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-parent</artifactId>
            <version>${spring-boot.version}</version>
            <type>pom</type>
            <scope>import</scope><!-- same as parent -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring-boot.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId><!-- imported from other starters anyway -->
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId><!-- else .NoClassDefFoundError: org/apache/commons/logging/LogFactory http://www.codingpedia.org/ama/how-to-log-in-spring-with-slf4j-and-logback/ -->
                </exclusion>
            </exclusions>
        </dependency>


        <!-- REST/XML -->   

        <!-- JAX-RS (elsewhere brought by cxf) -->
         <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${jaxrs.version}</version>
         </dependency>     

        <!-- CXF -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-spring-boot-starter-jaxrs</artifactId><!-- brings autoconfigure & (needs) starter-web, validation-api, cxf http & jaxws -->
            <version>${cxf.version}</version>
        </dependency>

        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-xml-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId><!-- for tests -->
            <version>${jackson.version}</version>
        </dependency>
        <!-- dependency> NOO jsr310 instead
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!- Joda Time ->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.version}</version>
        </dependency -->

        <!-- Swagger -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId><!-- to be used in -api, otherwise brought by cxf -->
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-service-description-swagger</artifactId><!-- ?!? -->
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>${swagger-ui.version}</version>
        </dependency>

        <!-- Eureka Service Discovery Client>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
            <version>${spring.cloud.eureka.version}</version>
        </dependency -->
        <!-- Actuator Endpoints --> 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- SLF4J TODO -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId><!-- also brought back by logback-classic -->
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId><!-- http://www.codingpedia.org/ama/how-to-log-in-spring-with-slf4j-and-logback/ -->
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId><!-- ?? -->
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId><!-- ? for conf ? -->
            <version>${groovy.version}</version>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId><!-- replace cxf swagger's 3.2.1 by qwazr's 3.5-7, else
            Caused by: java.lang.NoSuchMethodError: org.apache.commons.lang3.StringUtils.compare(Ljava/lang/String;Ljava/lang/String;)I
   at com.qwazr.library.audio.AudioParser.lambda$static$1(AudioParser.java:95)
            -->
            <version>3.6</version>
        </dependency>
          
        <!-- Test dependencies -->
        <!-- dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
            <type>jar</type>
        </dependency -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
<!--             <scope>test</scope> -->
<!-- TODO uncomment test when default driver is not needed by the PCU crawler -->
            <version>1.4.192</version>
        </dependency>
        <!--<dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>-->
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-core</artifactId>
            <version>3.3</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.opentable.components</groupId>
            <artifactId>otj-pg-embedded</artifactId>
            <scope>test</scope>
            <version>0.7.1</version>
        </dependency>

            <!-- UI -->
        
		      <!-- upload>
		      <dependency>
		          <groupId>commons-fileupload</groupId>
		          <artifactId>commons-fileupload</artifactId>
		          <version>1.3.1</version>
		      </dependency -->

            <!-- Thymeleaf -->
            <dependency>
                <groupId>org.thymeleaf</groupId>
                <artifactId>thymeleaf-spring5</artifactId>
                <version>${thymeleaf.version}</version>
            </dependency>
            <!-- dependency>
                <groupId>org.thymeleaf</groupId>
                <artifactId>thymeleaf</artifactId>
                <version>${thymeleaf.version}</version>
            </dependency>
            <!- for IE see #112 ->
            <dependency>
                <groupId>org.thymeleaf.extras</groupId>
                <artifactId>thymeleaf-extras-conditionalcomments</artifactId>
                <version>${thymeleaf.conditionalcomment.version}</version>
            </dependency -->

            <!-- Webjars -->
            <!-- dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>${bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>font-awesome</artifactId>
                <version>${font-awesome.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${jquery.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery-ui</artifactId>
                <version>${jquery-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>momentjs</artifactId>
                <version>${momentjs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>react</artifactId>
                <version>${react.version}</version>
            </dependency -->

        <!-- dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.2</version>
        </dependency -->
    </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId><!-- ?? -->
                <!-- version>2.5</version -->
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${org.jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Cobertura & Coveralls.io -->
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>cobertura-maven-plugin</artifactId>
               <version>${cobertura-plugin.version}</version>
               <configuration>
                  <format>xml</format>
                  <maxmem>256m</maxmem>
                  <aggregate>true</aggregate>
                  <instrumentation>
                     <!-- Exclude JPA meta-model generated classes (hibernate-jpamodelgen) -->
                     <ignores>
                        <ignore>**/*_.java</ignore>
                     </ignores>
                     <excludes>
                        <exclude>**/*_.class</exclude>
                     </excludes>
                  </instrumentation>
                  <check />
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.eluder.coveralls</groupId>
               <artifactId>coveralls-maven-plugin</artifactId>
               <version>${coveralls-plugin.version}</version>
               <configuration>
                  <repoToken>Sk0qF3TUPPVr7F7AkrNrRu9Xi7Wa72tGp</repoToken>
               </configuration>
            </plugin>
            
            <!-- replace BCEL dep with Java 8 compatible version :
            else JarAnalyzer warnings when generating site
            org.apache.bcel.classfile.ClassFormatException: Invalid byte tag in constant pool: 18
            see https://github.com/RichardWarburton/lambda-behave/issues/31 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-shared-jar</artifactId>
                        <version>1.1</version>
                        <exclusions>
                            <exclusion>
                                <groupId>org.apache.bcel</groupId>
                                <artifactId>bcel</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>bcel-findbugs</artifactId>
                        <version>6.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

    </build>
    
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled><!-- else error even if provide repository :
                    ex. repository url 'http://dist.gemstone.com/maven/release' is invalid
                    see http://stackoverflow.com/questions/28098566/maven-site-warning-the-repository-url-https-maven-repository-dev-java-net-no -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId><!-- generates links to source code in failed tests -->
            </plugin>
            
        </plugins>
    </reporting>
    
</project>

