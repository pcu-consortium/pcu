<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <artifactId>pcu-features-parent</artifactId>
      <groupId>org.pcu-consortium.pcu</groupId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <artifactId>pcu-features-connector</artifactId>
   <name>PCU Features Connector</name>
   <description>PCU Features Connector</description>

   <dependencies>

      <!-- PCU -->
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
         <artifactId>pcu-platform-rest-client</artifactId><!-- NOT server -->
      </dependency>
      
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
          <artifactId>pcu-providers-search-spi-client</artifactId>
      </dependency>
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
         <artifactId>pcu-providers-file-spi-client</artifactId>
      </dependency>
        
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
         <artifactId>pcu-providers-search-elasticsearch-spi-impl</artifactId><!-- for ModelService ; TODO better or only test yet ?! -->
         <!-- scope>test</scope -->
      </dependency>
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
         <artifactId>pcu-providers-search-elasticsearch-spi-impl</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
         <artifactId>pcu-providers-file-local-spi-impl</artifactId>
      </dependency>
      
      <!-- TODO : and / or server-side, using uploaded content and URL -->
      <dependency>
         <groupId>org.pcu-consortium.pcu</groupId>
         <artifactId>pcu-providers-metadata-extractor-spi-impl</artifactId>
      </dependency>

      <!-- metamodel TODO move -->
      <dependency>
         <groupId>org.apache.avro</groupId>
         <artifactId>avro</artifactId>
         <version>1.8.2</version><!-- TODO move -->
      </dependency>

      <!-- TODO rm UUID -->
      <!-- http://johannburkard.de/software/uuid/ https://github.com/stephenc/eaio-uuid -->
      <dependency>
         <groupId>com.github.stephenc.eaio-uuid</groupId>
         <artifactId>uuid</artifactId>
         <version>3.4.0</version>
      </dependency>

   </dependencies>

   <build>
      <plugins>
         <!-- metamodel - business bean gen for ex. client TODO move -->
         <!-- plugin>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>1.8.2</version>
            <executions>
               <execution>
                  <phase>generate-sources</phase>
                  <goals>
                     <goal>schema</goal>
                  </goals>
                  <configuration>
                     <sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
                     <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin -->
      </plugins>
   </build>
         

   <profiles>
   
      <!-- Shortcut for running PCU connector, use it with :
      mvn -Pconnector -->
      <profile>
         <id>connector</id>
         <build>
            <defaultGoal>spring-boot:run</defaultGoal>
            <plugins>
               <plugin>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-maven-plugin</artifactId>
               </plugin>
            </plugins>
            <resources>
               <resource>
                  <directory>${basedir}/config</directory>
               </resource>
            </resources>
         </build>
      </profile>
      
      <!-- Package PCU connector as an executable jar, run it with :
      mvn clean install -Pjar -DskipTests -->
      <profile>
         <id>jar</id>
        
   <build>
      <finalName>${project.artifactId}</finalName><!-- without -${project.version}-r${buildNumber} else cumbersome for .conf when full executable -->
      <plugins>
         <!-- metamodel - business bean gen for ex. client TODO move -->
         <!-- plugin>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>1.8.2</version>
            <executions>
               <execution>
                  <phase>generate-sources</phase>
                  <goals>
                     <goal>schema</goal>
                  </goals>
                  <configuration>
                     <sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
                     <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.4</version>
            <executions>
               <execution>
                  <phase>validate</phase>
                  <goals>
                     <goal>create</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <doCheck>false</doCheck><!-- true = fail if modified files -->
               <doUpdate>false</doUpdate><!-- true = pull first -->
               <!-- shortRevisionLength>8</shortRevisionLength -->
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.0.2</version>
            <configuration>
               <archive>
                  <manifestEntries>
                     <Implementation-Build>${buildNumber}</Implementation-Build>
                  </manifestEntries>
               </archive>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
               <!-- jvmArguments> NOO only works when starting using mvn,
               (and both args don't work together because of quoting problems)
               rather set env props in jarfilename.conf :
               see https://github.com/spring-projects/spring-boot/issues/5505#issuecomment-202239406
                  -Dloader.path=".,BOOT-INF/lib/" -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8002
               </jvmArguments -->
               <!-- embeddedLaunchScriptProperties> alas can't conf JAVA_OPTS, see
               http://mrhaki.blogspot.fr/2016/06/grails-goodness-creating-fully.html
                  <initInfoDescription>myDesc</initInfoDescription>
               </embeddedLaunchScriptProperties -->
               <!-- profiles>
                  <profile>default</profile>
               </profiles -->
               <executable>true</executable><!-- creates a "fully executable" jar
               http://docs.spring.io/spring-boot/docs/current/reference/html/deployment-install.html -->
               <layout>ZIP</layout><!-- similar to the JAR layout using PropertiesLauncher
               http://docs.spring.io/spring-boot/docs/current/maven-plugin/usage.html
               PropertiesLauncher behaves the same as JarLauncher when no additional configuration is provided
               http://docs.spring.io/spring-boot/docs/current/reference/html/executable-jar.html -->
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>repackage</goal><!-- create a jar or war file that is auto-executable
                     The plugin rewrites your manifest, and in particular it manages the Main-Class and Start-Class entries
                     http://docs.spring.io/spring-boot/docs/current/maven-plugin/usage.html -->
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <resources>
         <resource>
            <directory>${basedir}/config</directory>
         </resource>
      </resources>
   </build>
   
      </profile>
   </profiles>
</project>

