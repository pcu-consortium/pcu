- name: download zookeeper3
  local_action: get_url url={{ pcu_defaults.zookeeper3.url }} dest={{ pcu_defaults.download_folder }}/{{ pcu_defaults.zookeeper3.archive_name }}

- name: creating zookeeper directory
  file:
    path: "{{ pcu_defaults.zookeeper3.remote_folder }}"
    state: directory
    owner: "{{ pcu_defaults.pcu_user }}"
    group: "{{ pcu_defaults.pcu_group }}"

- name: copy zookeeper3
  unarchive:
    src: "{{ pcu_defaults.download_folder }}/{{ pcu_defaults.zookeeper3.archive_name }}"
    creates: "{{ pcu_defaults.zookeeper3.remote_folder }}/{{ pcu_defaults.zookeeper3.name }}"
    dest: "{{ pcu_defaults.zookeeper3.remote_folder }}/"
    owner: "{{ pcu_defaults.pcu_user }}"
    group: "{{ pcu_defaults.pcu_group }}"

- name: creating zookeeper configuration directory
  file:
    path: "{{ pcu_defaults.zookeeper3.remote_folder }}/{{ pcu_defaults.zookeeper3.name }}/{{ pcu_defaults.zookeeper3.conf_file.dir_name }}"
    state: directory
    owner: "{{ pcu_defaults.pcu_user }}"
    group: "{{ pcu_defaults.pcu_group }}"

- name: creating zookeeper log directory
  file:
    path: "/var/log/zookeeper"
    state: directory
    owner: "{{ pcu_defaults.pcu_user }}"
    group: "{{ pcu_defaults.pcu_group }}"

- name: changing conf log directory
  lineinfile:
    path: "{{ pcu_defaults.zookeeper3.remote_folder }}/{{ pcu_defaults.zookeeper3.name }}/{{ pcu_defaults.zookeeper3.conf_file.dir_name }}/log4j.properties"
    regexp: '^zookeeper.log.dir='
    line: 'zookeeper.log.dir=/var/log/zookeeper'

- name: changing conf tracelog directory
  lineinfile:
    path: "{{ pcu_defaults.zookeeper3.remote_folder }}/{{ pcu_defaults.zookeeper3.name }}/{{ pcu_defaults.zookeeper3.conf_file.dir_name }}/log4j.properties"
    regexp: '^zookeeper.tracelog.dir='
    line: 'zookeeper.tracelog.dir=/var/log/zookeeper'

- name: creating zookeeper dataDir
  file:
    path: "{{ pcu_defaults.zookeeper3.conf_file.dataDir }}"
    state: directory
    owner: "{{ pcu_defaults.pcu_user }}"
    group: "{{ pcu_defaults.pcu_group }}"

- name: write zookeeper configuration
  template:
    src: zoo.cfg.j2
    dest: "{{ pcu_defaults.zookeeper3.remote_folder }}/{{ pcu_defaults.zookeeper3.name }}/{{ pcu_defaults.zookeeper3.conf_file.dir_name }}/{{ pcu_defaults.zookeeper3.conf_file.name }}"
    owner: "{{ pcu_defaults.pcu_user }}"
    group: "{{ pcu_defaults.pcu_group }}"

- name: write zookeeper service file
  template:
    src: zookeeper.service.j2
    dest: "{{ pcu_defaults.zookeeper3.service_folder }}/zookeeper.service"

- name: write zookeeper init.d file
  template:
    src: zookeeper.j2
    dest: "/etc/init.d/zookeeper"

- name: create myid file
  copy:
    content: "{{ inventory_hostname }}"
    dest: "{{ pcu_defaults.zookeeper3.conf_file.dataDir }}/myid"

- name: start service zookeeper
  service:
    name: zookeeper.service
    daemon_reload: yes
    state: started
